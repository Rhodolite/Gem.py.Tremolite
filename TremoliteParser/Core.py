#
#   Copyright (c) 2017-2018 Joy Diamond.  All rights reserved.
#
@module('TremoliteParser.Core')
def module():
    transport('Capital.Path',                       'path_join')
    transport('Capital.Path',                       'read_text_from_path')
    transport('Capital.System',                     'module_path')
    transport('Capital.System',                     'program_exit')
    transport('Capital.Traceback',                  'print_exception_chain')
    transport('CoreParser.ActionWord',              'produce_conjure_action_word')
    transport('CoreParser.Atom',                    'conjure_double_quote')
    transport('CoreParser.Atom',                    'conjure_name')
    transport('CoreParser.Atom',                    'conjure_single_quote')
    transport('CoreParser.BookcaseCoupleTwig',      'BookcaseCoupleTwig')
    transport('CoreParser.BookcaseCoupleTwig',      'produce_conjure_bookcase_couple_twig')
    transport('CoreParser.ClassOrder',              'CLASS_ORDER__NORMAL_TOKEN')
    transport('CoreParser.CrystalComment',          'conjure_any_comment_line')
    transport('CoreParser.CrystalIndentation',      'conjure_indentation')
    transport('CoreParser.CrystalIndentation',      'empty_indentation')
    transport('CoreParser.DualExpressionStatement', 'DualExpressionStatement')
    transport('CoreParser.DualExpressionStatement', 'produce_dual_expression_statement')
    transport('CoreParser.DualFrill',               'conjure_vw_frill')
    transport('CoreParser.DumpToken',               'dump_all_tokens')
    transport('CoreParser.Elemental',               'conjure_keyword_language')
    transport('CoreParser.Elemental',               'KeywordAndOperatorBase')
    transport('CoreParser.EmptyLine',               'conjure_empty_line')
    transport('CoreParser.LineMarker',              'conjure_line_marker')
    transport('CoreParser.LineMarker',              'LINE_MARKER')
    transport('CoreParser.TestTree',                'test_count_newlines')
    transport('CoreParser.TestTree',                'test_identical_output')
    transport('CoreParser.Tokenizer',               'parse_context')
    transport('CoreParser.Tokenizer',               'qd')
    transport('CoreParser.Tokenizer',               'qi')
    transport('CoreParser.Tokenizer',               'qj')
    transport('CoreParser.Tokenizer',               'qn')
    transport('CoreParser.Tokenizer',               'qs')
    transport('CoreParser.Tokenizer',               'raise_unknown_line')
    transport('CoreParser.Tokenizer',               'wi')
    transport('CoreParser.Tokenizer',               'wj')
    transport('CoreParser.Tokenizer',               'wn')
    transport('CoreParser.Tokenizer',               'z_initialize')
    transport('CoreParser.TripleFrill',             'conjure_vwx_frill')
